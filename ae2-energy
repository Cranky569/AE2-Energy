local mon = peripheral.find("monitor")
local bridge = peripheral.find("me_bridge")

if not mon then error("Kein Monitor gefunden!") end
if not bridge then error("Keine ME Bridge gefunden!") end

-- Funktion zum Formatieren großer Zahlen
local function formatBytes(bytes)
    if bytes >= 1e12 then
        return string.format("%.2fT", bytes / 1e12)
    elseif bytes >= 1e9 then
        return string.format("%.2fG", bytes / 1e9)
    elseif bytes >= 1e6 then
        return string.format("%.2fM", bytes / 1e6)
    elseif bytes >= 1e3 then
        return string.format("%.2fK", bytes / 1e3)
    else
        return tostring(bytes)
    end
end

-- Monitor Setup
mon.clear()
mon.setTextScale(1)
mon.setBackgroundColor(colors.black)
mon.setTextColor(colors.white)

local function writeCentered(text, y, color)
    local w, _ = mon.getSize()
    local x = math.floor((w - #text) / 2) + 1
    mon.setCursorPos(x, y)
    if color then mon.setTextColor(color) end
    mon.write(text)
    mon.setTextColor(colors.white)
end

while true do
    mon.clear()
    local y = 1
    writeCentered("ME Energy Monitor", y, colors.yellow)
    y = y + 2

    -- Aktueller Energieverbrauch
    local okUsage, usage = pcall(bridge.getEnergyUsage)
    if okUsage and type(usage) == "number" then
        writeCentered("Energy Usage: " .. formatBytes(usage) .. " FE/t", y, colors.red)
        y = y + 1
    else
        writeCentered("Energy Usage: Error", y, colors.red)
        y = y + 1
    end

    -- Durchschnittliche Einspeisung
    local okInjection, injection = pcall(bridge.getAvgPowerInjection)
    if okInjection and type(injection) == "number" then
        writeCentered("Avg Power Injection: " .. formatBytes(injection) .. " FE/t", y, colors.lightBlue)
        y = y + 1
    else
        writeCentered("Avg Power Injection: Error", y, colors.lightBlue)
        y = y + 1
    end

    -- Gespeicherte Energie & Kapazität
    local okStored, stored = pcall(bridge.getStoredEnergy)
    local okCap, capacity = pcall(bridge.getEnergyCapacity)
    if okStored and okCap and type(stored) == "number" and type(capacity) == "number" and capacity > 0 then
        local percent = (stored / capacity) * 100
        writeCentered("Stored: " .. formatBytes(stored) .. " / " .. formatBytes(capacity), y, colors.green)
        y = y + 1
        writeCentered(string.format("(%.2f%%)", percent), y, colors.green)
        y = y + 1
    else
        writeCentered("Energy Storage: Error", y, colors.red)
        y = y + 1
    end

    sleep(2)
end
